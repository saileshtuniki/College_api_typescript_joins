{
  "openapi": "3.0.0",
  "info": {
    "title": "College Hierarchy API",
    "version": "1.0.0",
    "description": "API documentation for the College Hierarchy system"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Local Server"
    }
  ],
  "paths": {
    "/principal/addprincipal": {
      "post": {
        "summary": "Add a new Principal",
        "description": "Creates a new principal in the college hierarchy.",
        "operationId": "addPrincipal",
        "tags": ["Principal"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Dr. Krishna"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Principal created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Principal added successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Dr. Krishna" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Name is not Provided" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": false },
                    "message": { "type": "string", "example": "Error in adding principal" },
                    "error": { "type": "string", "example": "Database connection failed" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/principal/getprincipal": {
      "get": {
        "summary": "Get Principal",
        "description": "Retrieves principal data.",
        "operationId": "getPrincipal",
        "tags": ["Principal"],
        "responses": {
          "200": {
            "description": "Principal fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Principal fetched successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Dr. Krishna" }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Error in getting principal" },
                    "error": { "type": "string", "example": "Database connection failed" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/principal/getbyid/{id}": {
      "get": {
        "summary": "Get Principal by ID",
        "description": "Retrieves principal data by ID.",
        "operationId": "getPrincipalById",
        "tags": ["Principal"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Principal fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "Principal with id: 1 fetched successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Dr. Krishna" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Invalid Id format" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Principal not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Principal with id not found" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Error in getting principal" },
                    "error": { "type": "string", "example": "Database connection failed" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/principal/updateprincipal/{id}": {
      "put": {
        "summary": "Update Principal",
        "description": "Updates a principal's details.",
        "operationId": "updatePrincipal",
        "tags": ["Principal"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Dr. Krishna Updated" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Principal updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Principal updated successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Dr. Krishna Updated" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Id and name are required" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Principal not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Principal not found or update failed" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Error while updating principal" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/principal/getallbyid/{id}": {
      "get": {
        "summary": "Get Principal and Child Data by ID",
        "description": "Retrieves a principal along with HODs, Professors, and Students by principal ID.",
        "operationId": "getAllById",
        "tags": ["Principal"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Principal and child data fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Principal and child data fetched successfully" },
                    "data": { "type": "object" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Id is required" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Principal not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Id not found or fetching failed" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Error while updating principal" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/principal/deleteprincipal/{id}": {
      "delete": {
        "summary": "Delete Principal",
        "description": "Deletes a principal and all related child data.",
        "operationId": "deletePrincipal",
        "tags": ["Principal"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Principal and child data deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Principal and child data deleted successfully" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Id is required" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Principal not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Id not found or delete failed" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Error while deleting principal" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hod/addhod": {
      "post": {
        "summary": "Add a new HOD",
        "description": "Creates a new HOD in the college hierarchy.",
        "operationId": "addHod",
        "tags": ["HOD"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Dr. Pavan" },
                  "parentId": { "type": "integer", "example": 1 }
                },
                "required": ["name", "parentId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "HOD added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "HOD added successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Dr. Pavan" },
                        "principalId": { "type": "integer", "example": 1 }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "name and parentId are required" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Error while adding Hod" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hod/gethod": {
      "get": {
        "summary": "Get all HODs",
        "description": "Retrieves all HODs.",
        "operationId": "getHod",
        "tags": ["HOD"],
        "responses": {
          "200": {
            "description": "HODs fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer", "example": 1 },
                      "name": { "type": "string", "example": "Dr. Pavan" },
                      "principalId": { "type": "integer", "example": 1 }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Error in getting hod data" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hod/gethodbyid/{id}": {
      "get": {
        "summary": "Get HOD by ID",
        "description": "Retrieves a HOD by ID.",
        "operationId": "getHodById",
        "tags": ["HOD"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "HOD fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "message": { "type": "string", "example": "HOD with id: 1 fetched successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Dr. Pavan" },
                        "principalId": { "type": "integer", "example": 1 }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Invalid id format (controller)" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "HOD not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "HOD with 1 not found (controller)" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Error in getting HOD" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hod/updatehodbyid/{id}": {
      "put": {
        "summary": "Update HOD",
        "description": "Updates a HOD's details.",
        "operationId": "updateHod",
        "tags": ["HOD"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Dr. Pavan Updated" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "HOD updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "HOD updated successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Dr. Pavan Updated" },
                        "principalId": { "type": "integer", "example": 1 }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Id and name are required" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "HOD not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "HOD not found or update failed" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Error while updating HOD" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hod/getallbyid/{id}": {
      "get": {
        "summary": "Get HOD and Child Data by ID",
        "description": "Retrieves a HOD along with associated Professors and Students by HOD ID.",
        "operationId": "getAllHodById",
        "tags": ["HOD"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "HOD and child data fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "HOD and child data fetched successfully" },
                    "data": { "type": "object" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Id is required" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "HOD not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "HOD not found or fetching failed" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Error while fetching HOD" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/hod/deletehod/{id}": {
      "delete": {
        "summary": "Delete HOD",
        "description": "Deletes a HOD and related child data.",
        "operationId": "deleteHod",
        "tags": ["HOD"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "HOD and related data deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "HOD and related child data deleted successfully" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Id is required" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "HOD not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Id not found or delete failed" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Error while deleting HOD" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/professor/addprofessor": {
      "post": {
        "summary": "Add a new Professor",
        "description": "Creates a new Professor in the college hierarchy.",
        "operationId": "addProfessor",
        "tags": ["Professor"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Dr. Bhanu" },
                  "parentId": { "type": "integer", "example": 1 }
                },
                "required": ["name", "parentId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Professor added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Professor added successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 2 },
                        "name": { "type": "string", "example": "Dr. Bhanu" },
                        "hodId": { "type": "integer", "example": 1 }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Name and Parent ID are required" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Cannot add Professor" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/professor/getprofessor": {
      "get": {
        "summary": "Get all Professors",
        "description": "Retrieves all Professors.",
        "operationId": "getProfessor",
        "tags": ["Professor"],
        "responses": {
          "200": {
            "description": "Professors fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer", "example": 2 },
                      "name": { "type": "string", "example": "Dr. Bhanu" },
                      "hodId": { "type": "integer", "example": 1 }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Server Error" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/professor/getprofessorbyid/{id}": {
      "get": {
        "summary": "Get Professor by ID",
        "description": "Retrieves a Professor by ID.",
        "operationId": "getProfessorById",
        "tags": ["Professor"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 2 }
          }
        ],
        "responses": {
          "200": {
            "description": "Professor fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 2 },
                        "name": { "type": "string", "example": "Dr. Bhanu" },
                        "hodId": { "type": "integer", "example": 1 }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Invalid ID format" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Professor not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Professor with 2 not found (controller)" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Server Error" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/professor/updateprofessor/{id}": {
      "put": {
        "summary": "Update Professor",
        "description": "Updates a Professor's details.",
        "operationId": "updateProfessor",
        "tags": ["Professor"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 2 }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Dr. Bhanu Updated" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Professor updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Professor updated successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 2 },
                        "name": { "type": "string", "example": "Dr. Bhanu Updated" },
                        "hodId": { "type": "integer", "example": 1 }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Valid ID and Name are required" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Professor not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Professor not found or update failed" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Server Error" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/professor/getallbyid/{id}": {
      "get": {
        "summary": "Get Professor and Child Data by ID",
        "description": "Retrieves a Professor along with associated Students by Professor ID.",
        "operationId": "getAllProfById",
        "tags": ["Professor"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 2 }
          }
        ],
        "responses": {
          "200": {
            "description": "Professor and child data fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Professor data fetched successfully" },
                    "data": { "type": "object" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Id is required" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Professor not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Professor not found or delete failed" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Server Error" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/professor/deleteprofessor/{id}": {
      "delete": {
        "summary": "Delete Professor",
        "description": "Deletes a Professor and related child data.",
        "operationId": "deleteProfessor",
        "tags": ["Professor"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 2 }
          }
        ],
        "responses": {
          "200": {
            "description": "Professor deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Professor ID 2 deleted successfully" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Id is required" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Professor not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "id not found or delete failed" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Cannot delete Professor" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/student/addstudent": {
      "post": {
        "summary": "Add a new Student",
        "description": "Creates a new Student in the college hierarchy.",
        "operationId": "addStudent",
        "tags": ["Student"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Satish" },
                  "parentId": { "type": "integer", "example": 2 }
                },
                "required": ["name", "parentId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Student added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Student added successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Satish" },
                        "professorId": { "type": "integer", "example": 2 }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Name and Parent ID are required" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Cannot add Student" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/student/getstudent": {
      "get": {
        "summary": "Get all Students",
        "description": "Retrieves all Students.",
        "operationId": "getStudent",
        "tags": ["Student"],
        "responses": {
          "200": {
            "description": "Students fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "integer", "example": 1 },
                      "name": { "type": "string", "example": "Satish" },
                      "professorId": { "type": "integer", "example": 2 }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Server Error" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/student/getstudentbyid/{id}": {
      "get": {
        "summary": "Get Student by ID",
        "description": "Retrieves a Student by ID.",
        "operationId": "getStudentById",
        "tags": ["Student"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Student fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Satish" },
                        "professorId": { "type": "integer", "example": 2 }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Invalid ID format" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Student not found" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Server Error" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/student/updatestudent/{id}": {
      "put": {
        "summary": "Update Student",
        "description": "Updates a Student's details.",
        "operationId": "updateStudent",
        "tags": ["Student"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "example": "Satish Updated" }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Student updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Student updated successfully" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "Satish Updated" },
                        "professorId": { "type": "integer", "example": 2 }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Valid ID and Name are required" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Server Error" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/student/deletestudent/{id}": {
      "delete": {
        "summary": "Delete Student",
        "description": "Deletes a Student.",
        "operationId": "deleteStudent",
        "tags": ["Student"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Student deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Student id: 1 deleted successfully" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Id is required" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Student not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "id not found or delete failed" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Cannot delete Student" },
                    "error": { "type": "string", "example": "Database error" }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
